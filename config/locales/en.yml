en:
  authentication:
    authentication_failed:
      "authentication failed"
    missing_auth_header:
      "missing Authorization header"
    malformed_auth_header:
      "malformed Authorization header"
    unrecognized_auth_method:
      "unrecognized authentication method '%{method}'"
    bad_credentials:
      "bad credentials"

  crud:
    not_found:
      "%{model_name} with id %{id} not found"
    has_related_records:
      "%{model_name} with id %{id} has related records"
    violates_unique_constraint:
      "%{model_name} violates unique constraint"

  validation:
    not_a_valid:
      "%{value} is not a valid %{what}"
    must_only_contain:
      "must only contain %{what}"
    must_be_one_of:
      "must be one of: %{allowed_values}"
    must_be_a_workday:
      "is only possible for workdays"
    must_be_divisible_by:
      "must be divisible by %{divisor}"
    only_possible_before:
      "is only possible before %{time}"
    must_not_be_both:
      "must not be both %{variant1} and %{variant2}"
    must_not_be_longer:
      "must not be longer than %{than} characters"
    must_not_be_shorter:
      "must not be shorter than %{than} characters"
    must_not_end_with:
      "must not end with %{suffix}"
    must_not_be_before:
      "must not be before %{time}"
    must_not_be_in_past:
      "must not be in the past"

  registration:
    registration:
      "registration for examination"
    exam_date:
      "examination date"
    registration_for_today:
      "registration for today"
    nonexistent_time_slot:
      "time slot with id %{id} does not exist"
    daily_registration_limit_reached:
      "daily registration limit for %{date} reached"
    slot_registration_limit_reached:
      "time slot registration limit for %{date}, %{slot} reached"
    success_email_subject:
      "COVID-19 test registration"
    success_email_body:
      "Your COVID-19 test registration was successful."
    success_email_html_body:
      "Your COVID-19 test registration was successful."
    client_already_registered_for_date:
      "client with insurance_number %{insurance_number} is already registered for %{date}"

  column_translations:
    clients:
      municipality: 'city'

  entities:
    time_slot:
      model_name: 'time slot'

    client:
      birth_year:
        "birth year"

    exam:
      exam_type:
        "exam type"

    setting:
      model_name:
        "setting"

    date:
      parts:
        month: "month"
        day_of_month: "day of month"

    number:
      plural: "numbers"
